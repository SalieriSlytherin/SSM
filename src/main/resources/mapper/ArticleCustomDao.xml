<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuc.calvin.ssm.dao.ArticleCustomDao">
    <resultMap id="ArticleResultMap" type="com.nuc.calvin.ssm.entity.ArticleCustom">
        <id column="articleId" property="articleId" jdbcType="INTEGER"/>
        <result column="userId" property="userId" jdbcType="INTEGER"/>
        <result column="articleTitle" property="articleTitle" jdbcType="VARCHAR"/>
        <result column="articleUrl" property="articleUrl" jdbcType="VARCHAR"/>

        <!-- 一对一关系-->
        <association property="user" javaType="com.nuc.calvin.ssm.entity.User">
            <id column="userId" property="userId" jdbcType="INTEGER"/>
            <result column="username" property="username" jdbcType="VARCHAR"/>
            <result column="password" property="password" jdbcType="VARCHAR"/>
            <result column="email" property="email" jdbcType="VARCHAR"/>
            <result column="signature" property="signature" jdbcType="VARCHAR"/>
            <result column="sex" property="sex" jdbcType="INTEGER"/>
            <result column="headImg" property="headImg" jdbcType="VARCHAR"/>

        </association>
    </resultMap>

    <!-- 根据文章id查询微博 -->
    <select id="queryArticleByArticleId" parameterType="int" resultMap="ArticleResultMap">
        select * from article,user where article.articleId=#{articleId,jdbcType=INTEGER}
        and user.userId=article.userId
    </select>

    <!-- 根据文章id删除文章 -->
    <delete id="deleteByArticleId" parameterType="int">
        delete from article where articleId=#{articleId,jdbcType=INTEGER}
    </delete>

    <!-- 根据用户id查询文章 附加user昵称 头像 -->
    <select id="queryArticleByUserId" parameterType="Integer" resultMap="ArticleResultMap">

     select * from article as a inner join user as u on a.userId=u.userId and a.userId=#{userId,jdbcType=INTEGER}
    </select>

    <!-- 发文章 -->
    <insert id="postArticle" parameterType="com.nuc.calvin.ssm.entity.ArticleVo" keyProperty="articleId"
            useGeneratedKeys="true">
        insert into article(userId,articleTitle,articleUrl)
        values (#{userId,jdbcType=INTEGER} ,#{articleTitle,jdbcType=VARCHAR} ,#{articleUrl,jdbcType=VARCHAR}  )

    </insert>

    <!--查询文章被评论次数-->
    <select id="queryCommentCount" parameterType="int" resultType="int">
        select count(*)
        from comment
        where comment.articleId=#{articleId,jdbcType=INTEGER}
    </select>

    <!--查询文章被收藏次数-->
    <select id="queryCollectCount" parameterType="int" resultType="int">
       select count(*)
       from collect
       where collect.articleId=#{articleId,jdbcType=INTEGER}
   </select>

    <!--查询文章被回复次数-->
    <select id="queryReplyCount" parameterType="int" resultType="int">
        select count(*)
        from reply as r
        where r.commentId in(
        select commentId
        from comment
        where comment.articleId=#{articleId,jdbcType=INTEGER}
        )
    </select>

    <!--查询文章被点赞次数-->
    <select id="queryLikeCount" parameterType="int" resultType="int">
        select count(*)
        from likes
        where articleId=#{articleId,jdbcType=INTEGER}
    </select>

    <!-- 根据关键字搜索微博 -->
    <select id="queryArticleByWord" parameterType="String" resultMap="ArticleResultMap">
	select user.username,user.headImg,article.*
	from article,user
	where article.articleTitle like '%${keyWord,jdbcType=VARCHAR}%'
	and article.userId=user.userId order by postTime desc
	</select>

    <select id="queryAllArticle" resultMap="ArticleResultMap">
        select * from article as a inner join user as u on a.userId=u.userId
    </select>
</mapper>